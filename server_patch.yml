---
- hosts: "env_{{ lifecycle_stage }}"
  become: yes
  gather_facts: no
  vars:
    check_only: yes

  tasks:
  - name: wait for ssh to be available
    ansible.builtin.wait_for:
      host: "{{ hostvars[inventory_hostname]['ansible_default_ipv4']['address'] }}"
      port: 22
    delegate_to: localhost

  - name: gather facts
    ansible.builtin.setup:

  - name: check operating system
    assert:
      that: "ansible_os_family == 'RedHat'"

  - name: check for updates
    yum:
      name: '*'
      state: latest
      exclude: 
        - kernel*
        - NetworkManager*
    check_mode: "{{ check_only }}"
    throttle: 1
    register: updates

  - name: output updates dictionary
    debug:
      msg: "{{ updates }}"

  - name: set stat for patching notification
    ansible.builtin.set_stats:
      data:
        nodes_updated:
          - hostname: "{{ inventory_hostname }}"
            updates: "{{ updates }}"
    
  - name: updated package list
    debug:
      msg: "{% if item[0] in packages %}{{ packages[item[0]][0].version }}-{{ packages[item[0]][0].release }}.{{ packages[item[0]][0].arch }} >>> {{ item[1] }} {% else %} {{ item[1] }}{% endif %}"
    loop: "{{ updates.changes.updated }}"
    loop_control:
      label: "{{ item[0] }}"
    when: updates.changes is defined
